% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/m6ACalibrate.R
\name{m6ACalibrate}
\alias{m6ACalibrate}
\title{Calibrate putative m6A maps obtained from peak-calling.}
\usage{
m6ACalibrate(
  x,
  txdb = NULL,
  genome = NULL,
  gff = NULL,
  anti_type = c("Abcam", "NEB", "SYSY", "ensemble"),
  FP_threshold = 0.5
)
}
\arguments{
\item{x}{A \code{\link{GRanges}} object for the genomic location of m6A sites.}

\item{txdb}{A \code{\link{TxDb}} object for the transcript annotation.

The \code{TxDb} can be obtained from either Bioconductor or from the GFF/GTF files using the function \code{\link{makeTxDbFromGFF}}.}

\item{genome}{A \code{character} or a \code{\link{BSgenome}} for the reference genome.

The character should be the UCSC genome name which is acceptable by \code{\link{getBSgenome}} or/and \code{\link{makeTxDbFromUCSC}}; example: \code{"hg38"}.}

\item{gff}{optional, a \code{character} which specifies the directory toward a gene annotation GFF/GTF file, it is applied when the \code{TxDb} object is not available; default \code{= NULL}.}

\item{anti_type}{A \code{character} specifying the type of m6A-specific antibody, can be one of \code{c("Abcam", "NEB", "SYSY", "ensemble")}; default \code{= "ensemble"}.}

\item{FP_threshold}{A \code{numeric} value specifying the probability cutoff in predicting false positives at each m6A site.

It should be a numeric value between 0 and 1, where smaller values indicate stricter filtering; default \code{= 0.5}.}
}
\value{
A \code{GRanges} object containing the calibrated m6A sites.
}
\description{
This function takes in putative m6A maps as input and generates calibrated and high-confidence m6A maps as output.
}
\details{
\code{m6ACalibrate} extracts DRACH motifs from m6A peaks within exons and utilizes a selected model to identify false positives within these motifs.
It removes all m6A peaks overlapping with false positives, while retaining only those containing DRACH motifs.
The function outputs a high-precision m6A map after this calibration process.
}
\examples{

library(m6ACalibrateR)

# Example 1: Using a gene annotation GFF/GTF file for transcript annotation
# Load example data
x <- readRDS(system.file("extdata", "peaks.rds", package = "m6ACalibrateR"))

# Specify gtf file path
gtf_file_path <- system.file("extdata", "annotation.gtf", package = "m6ACalibrateR")

# Calibrate m6A maps
calibrated_m6A <- m6ACalibrate(x, gff = gtf_file_path, genome = "hg38", anti_type = "ensemble")
calibrated_m6A


# Example 2: Using a TxDb object for transcript annotation and a BSgenome object for the reference genome
# Load example data
x <- readRDS(system.file("extdata", "peaks.rds", package = "m6ACalibrateR"))

# Load TxDb and BSgenome
library(TxDb.Hsapiens.UCSC.hg38.knownGene)
library(BSgenome.Hsapiens.UCSC.hg38)
txdb <- TxDb.Hsapiens.UCSC.hg38.knownGene
bsgenome <- BSgenome.Hsapiens.UCSC.hg38

# Calibrate m6A maps
calibrated_m6A <- m6ACalibrate(x, txdb = txdb, genome = bsgenome, anti_type = "ensemble")
calibrated_m6A


# Example 3: Changing antibody type and false positive threshold
# Load example data
x <- readRDS(system.file("extdata", "peaks.rds", package = "m6ACalibrateR"))

# Load TxDb and BSgenome
library(TxDb.Hsapiens.UCSC.hg38.knownGene)
library(BSgenome.Hsapiens.UCSC.hg38)
txdb <- TxDb.Hsapiens.UCSC.hg38.knownGene
bsgenome <- BSgenome.Hsapiens.UCSC.hg38

# Calibrate m6A maps
calibrated_m6A <- m6ACalibrate(x, txdb = txdb, genome = bsgenome, anti_type = "Abcam", FP_threshold = 0.4)
calibrated_m6A


}
